Redux

1. You'll often find that you need to store some data, as well as some UI state, in the state tree. 
   This is fine, but try to keep the data separate from the UI state.
 
2. Things you should never do inside a reducer:

		2.1	Mutate its arguments;

		2.2	Perform side effects like API calls and routing transitions;

		2.3	Call non-pure functions, e.g. Date.now() or Math.random(). 
		
3.	Just remember to never assign to anything inside the state unless you clone it first In reducer.

4. a good way to change or say toggle only a part of state (if state consists a array of objects  and we want to update only one part of each object)
   Object.assign({}, state, {
        didInvalidate: true
      })
    here state has  naby json objets (array of objects) amd each objec has a key didInvalidate we want to chnage all of them to true.

5. if state have N objects but  in reduces we want to update a particular field of ith object 

     suppose we want to update ith object
     const new_state =[ ...state.slice(0,i)
 			{... state[i],likes:state[i].likes + 1},
                         ...state.clice(i+1)	
                      ]
     return new state

6. add one item to existing state in reducer 
   return [... state ,{
      user : action.user,
      text : action.text,
      time : action,log_time
     }]

7. 